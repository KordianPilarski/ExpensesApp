{"version":3,"sources":["components/Chart/ChartBar.js","components/Chart/Chart.js","components/Expenses/ExpenseFilter.js","components/Expenses/ExpenseDate.js","components/UI/Card.js","components/Expenses/ExpenseItem.js","components/Expenses/ExpensesList.js","components/Expenses/ExpensesChart.js","components/Expenses/Expenses.js","components/newExpense/ExpenseForm.js","components/newExpense/NewExpense.js","App.js","reportWebVitals.js","index.js"],"names":["ChartBar","value","maxValue","label","barFillHeight","Math","round","className","style","height","Chart","data","dataValues","map","dataPoint","totalMaximum","max","id","ExpensesFilter","onSelectedYear","selected","onChange","e","target","ExpenseDate","date","month","toLocaleString","year","getFullYear","day","Card","children","classes","ExpenseItem","initTitle","amount","ExpensesContent","items","length","item","title","ExpensesChart","expenses","ChartData","expense","getMonth","Expenses","useState","selectedYear","setSelectedYear","filteredExpenses","filter","toString","selectYear","console","log","ExpenseForm","onSaveExpenseData","stopEdit","enteredTitle","setEnteredTitle","enteredAmount","setEnteredAmount","enteredDate","setEnteredDate","onSubmit","preventDefault","expenseData","Date","type","min","step","onClick","NewExpense","onAddExpense","isEditing","setIsEditing","enteredExpenseData","random","initialExpenses","App","setExpenses","prevState","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.7ca13600.chunk.js","sourcesContent":["import \"./ChartBar.css\";\r\n\r\nconst ChartBar = ({ value, maxValue, label }) => {\r\n  let barFillHeight = \"0%\";\r\n\r\n  if (maxValue > 0) {\r\n    barFillHeight = Math.round((value / maxValue) * 100) + \"%\";\r\n  }\r\n\r\n  return (\r\n    <div className=\"chart-bar\">\r\n      <div className=\"chart-bar__inner\">\r\n        <div\r\n          className=\"chart-bar__fill\"\r\n          style={{ height: barFillHeight }}\r\n        ></div>\r\n      </div>\r\n      <div className=\"chart-bar__label\">{label}</div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ChartBar;\r\n","import \"./Chart.css\";\r\nimport ChartBar from \"./ChartBar\";\r\n\r\nconst Chart = ({ data }) => {\r\n  const dataValues = data.map((dataPoint) => dataPoint.value);\r\n  const totalMaximum = Math.max(...dataValues);\r\n\r\n  return (\r\n    <ul className=\"chart\">\r\n      {data.map((data) => (\r\n        <ChartBar\r\n          key={data.id}\r\n          value={data.value}\r\n          maxValue={totalMaximum}\r\n          label={data.label}\r\n        />\r\n      ))}\r\n    </ul>\r\n  );\r\n};\r\n\r\nexport default Chart;\r\n","// import React, { useState } from \"react\";\r\n\r\nimport Chart from \"../Chart/Chart\";\r\nimport \"./ExpensesFilter.css\";\r\n\r\nconst ExpensesFilter = ({ onSelectedYear, selected }) => {\r\n  const selectChangeHandler = (e) => {\r\n    onSelectedYear(e.target.value);\r\n    // console.log(e.target.value);\r\n  };\r\n\r\n  return (\r\n    <div className=\"expenses-filter\">\r\n      <div className=\"expenses-filter__control\">\r\n        <label>Filter by year</label>\r\n        <select value={selected} onChange={selectChangeHandler}>\r\n          <option value=\"2022\">2022</option>\r\n          <option value=\"2021\">2021</option>\r\n          <option value=\"2020\">2020</option>\r\n          <option value=\"2019\">2019</option>\r\n        </select>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ExpensesFilter;\r\n","import \"./ExpenseDate.css\"\r\n\r\nconst ExpenseDate = ({date}) => {\r\n    const month = date.toLocaleString(\"en-US\", { month: 'long' });\r\n    const year = date.getFullYear();\r\n    const day = date.toLocaleString(\"en-US\", { day: \"2-digit\" });\r\n\r\n    return(\r\n        <div className=\"expense-date\">\r\n        <div className=\"expense-date__month\">{month}</div>\r\n        <div className=\"expense-date__year\">{year}</div>\r\n        <div className=\"expense-date__day\">{day}</div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ExpenseDate","import \"./Card.css\";\r\n\r\nconst Card = ({ children, className }) => {\r\n  const classes = \"card \" + className;\r\n  return <div className={classes}>{children}</div>;\r\n}\r\n\r\nexport default Card;\r\n","import \"./ExpenseItem.css\";\r\nimport ExpenseDate from \"./ExpenseDate\";\r\nimport Card from \"../UI/Card\";\r\n\r\nconst ExpenseItem = ({ initTitle, amount, date }) => {\r\n  return (\r\n    <li>\r\n      <Card className=\"expense-item\">\r\n        <ExpenseDate date={date} />\r\n        <h2 className=\"expense-item__description\">{initTitle} </h2>\r\n        <div className=\"expense-item__price\">${amount}</div>\r\n      </Card>\r\n    </li>\r\n  );\r\n};\r\n\r\nexport default ExpenseItem;\r\n","import \"./ExpensesList.css\";\r\nimport ExpenseItem from \"./ExpenseItem\";\r\n\r\nconst ExpensesContent = ({ items }) => {\r\n  if (items.length === 0) {\r\n    return <h2 className=\"expenses-list__fallback\">No Expenses to show</h2>;\r\n  }\r\n\r\n  return (\r\n    <ul className=\"expenses-list\">\r\n      {items.map((item) => (\r\n        <ExpenseItem\r\n          key={item.id}\r\n          initTitle={item.title}\r\n          amount={item.amount}\r\n          date={item.date}\r\n        />\r\n      ))}\r\n    </ul>\r\n  );\r\n};\r\n\r\nexport default ExpensesContent;\r\n","import Chart from \"../Chart/Chart\";\r\n\r\nconst ExpensesChart = ({ expenses }) => {\r\n  const ChartData = [\r\n    { label: \"Jan\", value: 0 },\r\n    { label: \"Feb\", value: 0 },\r\n    { label: \"Mar\", value: 0 },\r\n    { label: \"Apr\", value: 0 },\r\n    { label: \"May\", value: 0 },\r\n    { label: \"Jun\", value: 0 },\r\n    { label: \"Jul\", value: 0 },\r\n    { label: \"Aug\", value: 0 },\r\n    { label: \"Sep\", value: 0 },\r\n    { label: \"Oct\", value: 0 },\r\n    { label: \"Nov\", value: 0 },\r\n    { label: \"Dec\", value: 0 },\r\n  ];\r\n\r\n  for (const expense of expenses) {\r\n    const expenseMonth = expense.date.getMonth();\r\n    ChartData[expenseMonth].value += expense.amount;\r\n  }\r\n\r\n  return <Chart data={ChartData} />;\r\n};\r\n\r\nexport default ExpensesChart;\r\n","import React, { useState } from \"react\";\r\nimport ExpensesFilter from \"./ExpenseFilter\";\r\nimport ExpensesList from \"./ExpensesList\";\r\nimport ExpensesChart from \"./ExpensesChart\";\r\nimport Card from \"../UI/Card\";\r\nimport \"./Expenses.css\";\r\n\r\nconst Expenses = ({ items }) => {\r\n  const [selectedYear, setSelectedYear] = useState(\"2020\");\r\n  const selectYearHandler = (selectYear) => {\r\n    setSelectedYear(selectYear);\r\n\r\n    console.log(\"z exp js\");\r\n    console.log(selectYear);\r\n  };\r\n\r\n  const filteredExpenses = items.filter((item) => {\r\n    return item.date.getFullYear().toString() === selectedYear;\r\n  });\r\n\r\n  return (\r\n    <div>\r\n      <Card className=\"expenses\">\r\n        <ExpensesFilter\r\n          selected={selectedYear}\r\n          onSelectedYear={selectYearHandler}\r\n        />\r\n        <ExpensesChart expenses={filteredExpenses} />\r\n        <ExpensesList items={filteredExpenses} />\r\n      </Card>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Expenses;\r\n","import { useState } from \"react\";\r\nimport \"./ExpenseForm.css\";\r\n\r\nconst ExpenseForm = ({ onSaveExpenseData, stopEdit }) => {\r\n  const [enteredTitle, setEnteredTitle] = useState(\"\");\r\n  const [enteredAmount, setEnteredAmount] = useState(\"\");\r\n  const [enteredDate, setEnteredDate] = useState(\"\");\r\n  // const [addClicked, setAddClicked] = useState(false);\r\n  const titleChangeHandler = (e) => {\r\n    setEnteredTitle(e.target.value);\r\n  };\r\n  const amountChangeHandler = (e) => {\r\n    setEnteredAmount(e.target.value);\r\n  };\r\n  const dateChangeHandler = (e) => {\r\n    setEnteredDate(e.target.value);\r\n  };\r\n  const submitHandler = (e) => {\r\n    e.preventDefault();\r\n\r\n    const expenseData = {\r\n      title: enteredTitle,\r\n      amount: +enteredAmount,\r\n      date: new Date(enteredDate),\r\n    };\r\n    // console.log(expenseData);\r\n    // setAddClicked((prevAdd) => (prevAdd = !prevAdd));\r\n    onSaveExpenseData(expenseData);\r\n    setEnteredTitle(\"\");\r\n    setEnteredAmount(\"\");\r\n    setEnteredDate(\"\");\r\n    // console.log(addClicked);\r\n  };\r\n\r\n  // if (addClicked === true) {\r\n  //   return (\r\n  //     <div className=\"new-expense__actions\">\r\n  //       <button className=\"new-expense button\" type=\"submit\">\r\n  //         Add New Expense\r\n  //       </button>\r\n  //     </div>\r\n  //   );\r\n  // }\r\n\r\n  return (\r\n    <form onSubmit={submitHandler}>\r\n      <div className=\"new-expense__controls\">\r\n        <div className=\"new-expense__control\">\r\n          <label>Title</label>\r\n          <input\r\n            type=\"text\"\r\n            value={enteredTitle}\r\n            onChange={titleChangeHandler}\r\n          />\r\n        </div>\r\n        <div className=\"new-expense__control\">\r\n          <label>Amount</label>\r\n          <input\r\n            type=\"number\"\r\n            min=\"0.01\"\r\n            step=\"0.01\"\r\n            value={enteredAmount}\r\n            onChange={amountChangeHandler}\r\n          />\r\n        </div>\r\n        <div className=\"new-expense__control\">\r\n          <label>Date</label>\r\n          <input\r\n            type=\"date\"\r\n            min=\"2019-01-01\"\r\n            max=\"2022-12-31\"\r\n            value={enteredDate}\r\n            onChange={dateChangeHandler}\r\n          />\r\n        </div>\r\n      </div>\r\n      <div className=\"new-expense__actions\">\r\n        <button onClick={stopEdit} className=\"new-expense button\" type=\"button\">\r\n          Cancel\r\n        </button>\r\n        <button className=\"new-expense button\" type=\"submit\">\r\n          Add Expense\r\n        </button>\r\n      </div>\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default ExpenseForm;\r\n","import React, { useState } from \"react\";\r\nimport \"./NewExpense.css\";\r\nimport ExpenseForm from \"./ExpenseForm\";\r\n\r\nconst NewExpense = ({ onAddExpense }) => {\r\n  const [isEditing, setIsEditing] = useState(false);\r\n\r\n  const saveExpenseDataHandler = (enteredExpenseData) => {\r\n    const expenseData = {\r\n      ...enteredExpenseData,\r\n      id: Math.random().toString(),\r\n    };\r\n    // console.log(expenseData)\r\n    onAddExpense(expenseData);\r\n    setIsEditing(false);\r\n  };\r\n\r\n  const startEditingHandler = () => {\r\n    setIsEditing(true);\r\n  };\r\n\r\n  const stopEditingHandler = () => {\r\n    setIsEditing(false);\r\n  };\r\n\r\n  return (\r\n    <div className=\"new-expense\">\r\n      {!isEditing && (\r\n        <button onClick={startEditingHandler}>Add New Expense</button>\r\n      )}\r\n      {isEditing && (\r\n        <ExpenseForm\r\n          stopEdit={stopEditingHandler}\r\n          onSaveExpenseData={saveExpenseDataHandler}\r\n        />\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default NewExpense;\r\n","import React, { useState } from \"react\";\nimport \"./App.css\";\nimport Expenses from \"./components/Expenses/Expenses\";\nimport NewExpense from \"./components/newExpense/NewExpense\";\n\nconst initialExpenses = [\n  {\n    id: \"i1\",\n    title: \"Life Insurance\",\n    amount: 45.4,\n    date: new Date(2021, 2, 3),\n  },\n  {\n    id: \"i2\",\n    title: \"Car Insurance\",\n    amount: 249.9,\n    date: new Date(2020, 11, 12),\n  },\n  {\n    id: \"i3\",\n    title: \"Credit Card Payoff\",\n    amount: 89.3,\n    date: new Date(2021, 7, 22),\n  },\n];\n\nconst App = () => {\n  const [expenses, setExpenses] = useState(initialExpenses);\n\n  const addExpenseHandler = (expense) => {\n    setExpenses((prevState) => {\n      return [expense, ...prevState];\n    });\n    // console.log(\"ina appjs\");\n    // console.log(expense);\n  };\n\n  return (\n    <div className=\"App\">\n      <h1>\n        <NewExpense onAddExpense={addExpenseHandler} />\n        <Expenses items={expenses} />\n      </h1>\n    </div>\n  );\n};\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}